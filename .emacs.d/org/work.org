#+TAGS: BUG(b) TASK(t) MEETING(m) FEATURE(f)
* DONE Meeting_1						    :MEETING:
  CLOSED: [2016-02-10 Ср. 14:48]

** Team work
    Discuss about problems in team, cooperation, task delegation.

*** New field in database
We constantly adding new fields in database, and change its structure. 
May be we can add an structure that will contain all service fields?

#+BEGIN_SRC js
{
  "promo": <url>,
  "target": <url>,
  "filters": {
    "User-Agent": <value>,
    "User-Domain": <value>
  }
  "service": {
    "switchOnAt": <date>,
    "lastTimeChecked": <date>
  }
}
#+END_SRC

*** DONE About pull requests
    CLOSED: [2016-02-11 Чт. 17:58]
Two features peding approval. We need to merge them as soon as possible.

*** Tree
We hugely need tree implemetation to replace LinkProcessor class due LinkProcessor's delopment overhead.

** Personal work
Some questions about front-end and current tasks.

*** "Check target button" feature
Now "check target" action does not save the state of the target. 
- DONE Do we need to implement this functionality now?
     CLOSED: [2016-02-11 Чт. 17:59]
- DONE What about availability logic? Do we need to implement it on server, or client?
     CLOSED: [2016-02-11 Чт. 14:38]
     Send status to front, like: WARNING, ERROR, GOOD
     {
       STATUS,
       DATE,
       MESSAGE
     }

*** CANCELED How about to implement filters by target status?
     CLOSED: [2016-02-11 Чт. 14:39]
     
** DONE Priorities
    CLOSED: [2016-02-11 Чт. 14:44]
    What tasks have highest priority?

*** TODO Create promo with default target
    Add default filters, like "other"
    ASSIGNED TO Vladimir

*** DONE Check device filter
     CLOSED: [2016-02-11 Чт. 17:03]
     Is it in develop branch?
*** DONE Work with check target statuses
     CLOSED: [2016-02-17 Ср 12:32]
     Add status to basy, async
     Add date to fron
*** TODO Authentification
    NGINX
    Merged to smartactors?
    [[mailto:ahvetskovich@gmail.com][about-auth]
     
*** IN PROGRESS Bugs

*** TODO Versions     

** DONE Front-end
    CLOSED: [2016-02-11 Чт. 17:59]
    What frond-end feautures we need? 

    - When promo created, create new target.
    - Filters bug
    - Target status

* DONE Meeting_2						    :MEETING:
  CLOSED: [2016-02-15 Пн. 17:14]

** Authorization 
    Already done in lottery

** Dumb server
    Server stop working while 'check target' process in progress.
    - Debug

** Check target
    Async check target button work.

** Rework target and promo encodings
    Validate promos and targets.

* TODO todo [8/17]
** TODO Bug list							:BUG:
   List of found bugs is available in googledocs.

** DONE Promo creation bug						:BUG:
   CLOSED: [2016-02-29 Пн. 21:01]

   On create promo empty target already exists on frontend.
   This bug about reduce operation on front.

** CANCELLED New target not visible on create				:BUG:
   CLOSED: [2016-02-16 Вт. 19:14]
   - State "CANCELLED"  from ""           [2016-02-16 Вт. 19:14] \\
     Cause of duplication
   Rare bug? While create new target, this target does not appears in admin
   panel.
   - or when an target previously deleted?

** DONE Edit target does not adds switch(On/Off)At fields		:BUG:
   CLOSED: [2016-02-15 Пн. 19:00]
   When you trying to edit target url, the time fields does not injects. So, the 'check target' does not work for
   corrupted targets.

** DONE Set target status						:BUG:
   CLOSED: [2016-02-14 Вс. 20:04]
   Throws 'Can not read property', and stops execution, so if some targets is not colored yet, they don't wan't to be
   colored.

** TODO New target does not displayed					:BUG:
   Rare bug? Recently added target does not displayed. Apprears on more then 3 targets? Cause of long database save?

** DONE New target check status						:BUG:
   CLOSED: [2016-02-15 Пн. 18:57]
   HTTP status doen't checked for newly created targets.

** CANCELLED Not enough filters in check target				:BUG:
   CLOSED: [2016-02-15 Пн. 18:57]
   - State "CANCELLED"  from ""           [2016-02-15 Пн. 18:57]
   Check target map does not use enough filters while trying to search and target. So, it can be two equal targets with different filters and that sutiation can corrupt search result.

** Null target								:BUG:
   Null targets does not allowed.
   To fix try to add [[Default target][default target]]
   
** WAITING Equals target check statuses					:BUG:
   - State "WAITING"    from "IN PROGRESS"       [2016-02-16 Вт. 19:15] \\
     Wait for decision about injecting ids into database record
   'Check target' does't work correctly with equals targets, cause of database 
   search query. This problem refers to "Not enough filters in check target" bug.
   
*** DONE Fix edit target event
    CLOSED: [2016-02-17 Ср 12:56]
    So when we edit target the message with HTTP status should disappers.

*** TODO Check target on create
    Server does not checks targets on 'target create' action.

    - So as 'check target' depends on id, that does not exists after creation, front send null id, then, after querying url id saves 'with query result'.

** Add version field						       :TASK:
   DEADLINE: <2016-02-22 Пн>
   Add ~version~ field to database record.

** IN PROGRESS Split view and BL in feature/check-target 	       :TASK:
   BL not allowed in view, should extact BL function from view files on frontend.

** TODO Encode promo and target					       :TASK:
   - To correctly handle promos and targets need to encode them into some kind of URL format.
   - Possibly create new pair of fields for encoded promo and target.

** Authentification 						    :FEATURE:
  DEADLINE: <2016-02-22 Пн>
   Implement authentification by socail networks.

** Add switch(On/Off)At front implementation			    :FEATURE:
   Add some kind of input (like calendar) to allow users to change promo (target?) switch off date.

** IN PROGRESS Default target					    :FEATURE:
   User must create defaut target link on promo creating that will handle all 'unexpected' requests. 

*** TODO Check for availability
Check avalability when tryis to go to targets menu?

*** TODO Change view on save button click
Hide button, or just reload targets menu.

** TODO Fix inner strong type wrappers				    :FEATURE:
   Now inner strong type wrapper does not supported by smartactors. Need to implement this functionality and change used wrappers.
* Refactoring

** US01
   - ~невозможность выполнить постусловие всегда обозначает вылет исключения из актора~
   - ~имейте в виду исключения выбрасываются нами, только когда не можем выполнить постусловие~

*** A001 Добавить в сообщение поле Domain, которое содержит домен третьего уровня из запрашиваемого URL
    Например, если пришел запрос hwdtech.1derlink.com/asdfgh, то результатом работы этого актора является 
    поле Domain, содержащее "hwdtech".
    
    *Предусловие*: обрабатываеый url содержит в себе компонет - домен третьего уровня, но не четвертого и 
    последующих - нарушение предусловия - исключение
    
    *Постусловие*: сообщение содержит непустое поле Domain
    
    *Уже имеется*:
    [[ContextProvider][Context provider]] - может вытащить Domain из сообщения.

*** A002 Добавить в сообщение поле UrlId, которое содержит фрагмент XXXXX промоссылки
    Например, если пришел запрос hwdtech.1derlink.com/asdfgh, то результатом работы этого актора является 
    поле UrlId, содержащее "asdfg".
    
    *Предусловие*: обрабатываемый url содержит в себе фрагмент XXXXXX
    *Постусловие*: сообщение содержит непустое поле UrlId
     
    *Уже имеется*:
    [[ContextProvider][Context provider]] - может вытащить uri из сообщения.

*** A003 Найти по полям Domain, UrlId, Device, Manufacture, Country и др. нужный url для редиректа и записать его в поле redirect
    Поиск ведется по дереву - первый уровень этого дерева - домены клиентов, второй уровень - uriId и только 
    потом уже параметры, которые были извлечены из контекста запроса.
    
    *Предусловие*: все поля непустые
    *Постусловие*: поле redirect либо пусто, либо содержит нужный url
    
    *Уже имеется*:
    В данный момент дерево поиска не реализовано. Поиск по базе с множеством условий крайне неудобен.

*** А004 Выполнить редирект на нужную страницу
    Сообщение содержит непустое поле redirect c url. произвести редирект по заданному url
     
    *Предусловие*: поле redirect содержит url

    *Постусловие*: пользователю отправлен ответ с редиректом на заданную страницу

    *Уже имеется*: [[Как работает редирект?][Как работает редирект?]]

*** A005 Возвратить пользователю страницу с 404 кодом ошибки
    В ответ на запросшенный url отправить пользователю html страницу от имени 1derlink с 404 кодом ошибки

    *Постусловие*: пользователю отправлена страница с 404 кодом ошибки
    
    *Уже имеется*: [[Как работает редирект?][Как работает редирект?]]

*** A006 Выбрать редирект, либо 404 ошибку
    Если сообщение содержит поле redirect c заданным url, то перенаправить сообщение на актор A004

    *Постусловие*: следующий актор в карте либо A004, либо A005

    *Уже имеется*: [[Как работает редирект?][Как работает редирект?]]

*** A007 Добавить в сообщение поле Device, которое содержит идентификатор класса устройств, с которого обращается незарегистрированный пользователь
    Принцип тот же, что и для актора A001. В случае невозможности определить устройство в поле пишется 
    значение other.
    
    - Рекомендуется для таких полей пользоваться значениями, которые использует [[https://metrika.yandex.ru/][yandex.metrika]]
    - Обратите внимание, что яндекс метрика некоторые параметры группирует, например, смартфон Asus, смартфон самсунг
    - У нас может появиться потребность задать правило для всех смартфонов, либо только для смартфонов самсунг
    - Рекомендуется разбить значение смартфон самсунг на два поля Device и Manufacture

    *Предусловие*: любой произвольный запрос

    *Постусловие*: сообщение содержит непустое поле Device

    *Уже имеется*: 
    1) метод ~LinkProcessor.detectDeviceType(String)~, который по значению User-Agent определяет тип девайса: detectDeviceType(User-Agent) \in {mobile, tablet, desktop}
    2) [[ContextProvider][Context provider]] - может вытащит User-Agent пользователя из контекста сообщения.

*** A008 Добавить в сообщение поле Manufacture, которое содержит наименование производителя устройства, с которого обращается незарегистрированный пользователь
    В случае невозможности определить производителя в поле пишется значение other

    *Предусловие*: любой произвольный запрос

    *Постусловие*: сообщение содержит непустое поле Manufacture

    *Уже имеется*: в данный момент никаких методов для определения девайся пользователя на проекте нет.

*** A009 Добавить в сообщение поле Country, которое содержит наименование страны, из которой обращается незарегистрированный пользователь
    В случае невозможности определить страну в поле пишется значение other

    *Предусловие*: любой произвольный запрос

    *Постусловие*: сообщение содержит непустое поле Country

    *Уже имеется*: в данный момент никаких методов для определения страны пользователя на проекте нет.
    
** Замечания
   - При выполнении акторов A007, A008, A009 и т.д. ожидается, что никаких эксепшенов вылетать не может, то есть все checkedexception должны быть отловлены внутри. Если же все-таки какое-либо исключение вылетает - это ошибка, которая была допущена в коде, так как мы ожидали, что исключений не будет, надо будет возвратить страницу с Internal Server Error - так как произошла непредвиденная ошибка именно у нас.
   - A003, A006 должны работать без ошибок, поэтому замечание тоже, что и для A007-A009...
   - Исключения в A001, A002 могут быть вызваны неправильным форматом урла, а значит в этом случае 
   вылет из этих акторов по исключению должен приводить в отправке 404 ошибки
   
** Контекст сообщения
    Приходит внутри сообщения. Содержит HTTP заголовки, домен третьего уровня, ip-адрес пользователя etc.
    
** ContextProvider
    Вспомогательный класс, который умеет работать с [[Контекст сообщения][контекстом сообщения]].

** Как работает редирект?
    В текущей реализации для обработки HTTP GET запросов всегда используется одна и та же цепочка.
    Перенаправление производится в соответствии с наличием поля ~redirectTo~. То есть,
    после отработки цепочки, обрабатывающей GET, конечная точка проверяет наличие данного поля,
    и указывает его содержимое в качестве redirect target. В случае же отсутствия поля ~redirectTo~
    пользователю будет возвращён HTTP 404.
